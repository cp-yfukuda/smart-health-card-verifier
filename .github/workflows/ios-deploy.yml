name: IOS Build

on:
  release:
    types: [published]

jobs:
  IOS Dev Release:
    name: 'Build and Publish VerifierDev to TestFlight'
    runs-on: macos-11
    env:
      CODE_SIGN_CERTIFICATE_BASE64: ${{ secret.DEV_IOS_CERTIFICATE_BASE64 }}
      PASSPHRASE: ${{ secret.DEV_IOS_PASSPHRASE }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
          cache-dependency-path: subdir/package-lock.json
      - name: Install dependencies
        run: npm install

      - name: Restore buildcache
        uses: mikehardy/buildcache-action@v1
        continue-on-error: true

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
        run: |
          ruby ./tools/deploy/ios/ios_deploy.rb -e dev
      - name: Decrypt Required Files
        working-directory: ./ios
        run: |
          echo "${{ secrets.IOS_DEPLOY_API_KEY_SECRET }}" > api_secret.p8
          echo "${{ secrets.DEV_IOS_MOBILE_PROVISION }}" > Distribution.mobileprovision.asc
          gpg --decrypt --passphrase "${{ secrets.DEV_GPG_PASSPHRASE }}" --batch Distribution.mobileprovision.asc > Distribution.mobileprovision
          echo "${{ secrets.DEV_IOS_P12_CERTIFICATE }}" > DistributionCertificates.p12.asc
          gpg --decrypt --passphrase "${{ secrets.DEV_GPG_PASSPHRASE }}" --batch DistributionCertificates.p12.asc > DistributionCertificates.p2
      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        working-directory: ./ios
        run: pod install

      - name: Build IOS App
        working-directory: ./ios
        uses: mxcl/xcodebuild@v1
        with:
          code-sign-certificate: ${CODE_SIGN_CERTIFICATE_BASE64}
          code-sign-certificate-passphrase: ${PASSPHRASE}
          platform: iOS
          xcode: ^11.3
          configuration: release # no default, ie. `xcodebuild` decides itself
          scheme: Verfier
          action: build


      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Gakko IOS IPA
      #     path: "output.ipa"

      # - name: "Upload app to TestFlight"
      #   uses: apple-actions/upload-testflight-build@v1
      #   with:
      #     app-path: "output.ipa"
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
