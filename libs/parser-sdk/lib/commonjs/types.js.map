{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/* eslint @typescript-eslint/no-empty-interface: \"off\" */\n\nexport type VerifierInitOption = {[key: string]: any | undefined };\n\nexport type IParserBaseCls = new ( options: VerifierInitOption ) => IParserBase\n\nexport interface VaccineCodeItemType {\n  'system': string\n  'code': string\n  'display': string | null\n  'manufacturerName'?: string | null \n  'groupDisplay'?: string | null\n} \n\nexport interface BaseResources {\n  issuedDate: number | null\n  issuerData: issuerData\n  patientData: patientData\n  recordType: string\n  recordEntries?: RecordEntry[]\n  tagKeys?: string []\n}\n\nexport interface BaseResponse extends BaseResources {\n  isValid: boolean \n  errorCode: number\n}\n\n\nexport interface  IParserBase {\n  canSupport: ( payloads: string[] ) => Promise<null|IParserBase>\n  validate:  (payloads: string[]) => Promise< null | BaseResponse >\n}\n\n\n\nexport interface Result {\n  result: boolean\n}\n\nexport interface RecordEntry {\n  index?: unknown\n  resourceType: string\n  systemKey?: string\n  systemCode?: string\n  /* immunization */\n  lotNumber?: unknown\n  vaccinator?: unknown\n  vaccineName?: unknown\n  manufacturerName?: unknown\n  groupName?: unknown\n  vaccinationDate?: unknown\n  /* labResult */\n  securityCode?: string\n  performer?: string\n  effectiveDateTime?: string\n  systemName?: string\n\n  systemShortDefault?: string | null\n  codableConseptLabel?: string\n  codableConseptKey?: string\n  codableConseptCode?: string\n  codeableShortDefault?: string | null\n\n}\n\ninterface issuerData {\n  iss: string\n  logo_uri: string\n  name: string\n  updated_at: number\n  url: string\n}\n\ninterface patientData {\n  dateOfBirth: string\n  names: string[]\n}\n\n"],"mappings":""}