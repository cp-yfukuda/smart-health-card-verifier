{"version":3,"names":["SHLLoader","constructor","_defineProperty","RegExp","protocol","getIPSURL","shlURL","match","parserRegEx","loadSHLContent","payloads","console","info","url","data","passcode","res","fetch","method","body","JSON","stringify","then","json","exports","default"],"sources":["shlLoader.ts"],"sourcesContent":["export default class SHLLoader {\n    protocol: string = \"shlink:/\"\n    parserRegEx: RegExp = RegExp(`.*((${this.protocol})(.+))$`)\n    constructor(){\n\n    }\n    getIPSURL( shlURL: String ): string| null {\n        const match = shlURL.match(this.parserRegEx);\n        if( match ){\n            return  match[1]\n        } \n        return null\n    }\n    async loadSHLContent( payloads: string[] ) {\n        console.info(\"payloads = \" + payloads)\n        const url = \"https://ips.tcpdev.org/view/c4ec43ddab0c4c3eafd7e36ffc8e7e1e\"\n        const data = { passcode: \"123456\"}\n        const res = await fetch( url, { method: \"POST\", body: JSON.stringify(data) })\n            .then( ( res ) => res.json() )\n            .then( ( res ) => console.info(`JSON Viewer = ${JSON.stringify( res )}`))\n        return res;\n    }\n}"],"mappings":";;;;;;;;;AAAe,MAAMA,SAAS,CAAC;EAG3BC,WAAWA,CAAA,EAAE;IAAAC,eAAA,mBAFM,UAAU;IAAAA,eAAA,sBACPC,MAAM,CAAE,OAAM,IAAI,CAACC,QAAS,SAAQ,CAAC;EAG3D;EACAC,SAASA,CAAEC,MAAc,EAAiB;IACtC,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC;IAC5C,IAAID,KAAK,EAAE;MACP,OAAQA,KAAK,CAAC,CAAC,CAAC;IACpB;IACA,OAAO,IAAI;EACf;EACA,MAAME,cAAcA,CAAEC,QAAkB,EAAG;IACvCC,OAAO,CAACC,IAAI,CAAC,aAAa,GAAGF,QAAQ,CAAC;IACtC,MAAMG,GAAG,GAAG,8DAA8D;IAC1E,MAAMC,IAAI,GAAG;MAAEC,QAAQ,EAAE;IAAQ,CAAC;IAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAEJ,GAAG,EAAE;MAAEK,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAAE,CAAC,CAAC,CACxEQ,IAAI,CAAIN,GAAG,IAAMA,GAAG,CAACO,IAAI,EAAE,CAAE,CAC7BD,IAAI,CAAIN,GAAG,IAAML,OAAO,CAACC,IAAI,CAAE,iBAAgBQ,IAAI,CAACC,SAAS,CAAEL,GAAG,CAAG,EAAC,CAAC,CAAC;IAC7E,OAAOA,GAAG;EACd;AACJ;AAACQ,OAAA,CAAAC,OAAA,GAAAzB,SAAA"}