{"version":3,"names":["formatDateOfBirth","birthDate","year","month","day","split","dateOfBirth","sortRecordByDateField","dateFieldName","records","sort","a","b","Date","parse","index","rec","entries"],"sources":["utils.ts"],"sourcesContent":["// NOTE: Timezone affects date presentation, so in US it will be 1 day behind,\n//       that is why `new Date()` is not needed.\n//       Birthday date in FHIR => \"birthDate\": \"1960-01-20\"\nexport const formatDateOfBirth = (birthDate: string): string => {\n    const [year, month, day] = birthDate.split('-')\n  \n    const dateOfBirth = `${month}/${day}/${year}`\n  \n    return dateOfBirth\n}\n\nexport const sortRecordByDateField = ( dateFieldName: string, records: any[] ) => {\n    records.sort((a, b) => Date.parse(a[dateFieldName]) - Date.parse(b[dateFieldName]))\n    // set correct dose number if dose objects are swapped\n    for (const [index, rec] of records.entries()) {\n      rec.index = index + 1\n    }\n  }\n\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,SAAiB,IAAa;EAC5D,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAGH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC;EAE/C,MAAMC,WAAW,GAAI,GAAEH,KAAM,IAAGC,GAAI,IAAGF,IAAK,EAAC;EAE7C,OAAOI,WAAW;AACtB,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,CAAEC,aAAqB,EAAEC,OAAc,KAAM;EAC9EA,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACH,aAAa,CAAC,CAAC,GAAGK,IAAI,CAACC,KAAK,CAACF,CAAC,CAACJ,aAAa,CAAC,CAAC,CAAC;EACnF;EACA,KAAK,MAAM,CAACO,KAAK,EAAEC,GAAG,CAAC,IAAIP,OAAO,CAACQ,OAAO,EAAE,EAAE;IAC5CD,GAAG,CAACD,KAAK,GAAGA,KAAK,GAAG,CAAC;EACvB;AACF,CAAC"}