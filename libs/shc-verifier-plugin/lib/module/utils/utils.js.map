{"version":3,"names":["formatDateOfBirth","birthDate","year","month","day","split","dateOfBirth","sortRecordByDateField","dateFieldName","records","sort","a","b","Date","parse","index","rec","entries"],"sources":["utils.ts"],"sourcesContent":["// NOTE: Timezone affects date presentation, so in US it will be 1 day behind,\n//       that is why `new Date()` is not needed.\n//       Birthday date in FHIR => \"birthDate\": \"1960-01-20\"\nexport const formatDateOfBirth = (birthDate: string): string => {\n    const [year, month, day] = birthDate.split('-')\n  \n    const dateOfBirth = `${month}/${day}/${year}`\n  \n    return dateOfBirth\n}\n\nexport const sortRecordByDateField = ( dateFieldName: string, records: any[] ) => {\n    records.sort((a, b) => Date.parse(a[dateFieldName]) - Date.parse(b[dateFieldName]))\n    // set correct dose number if dose objects are swapped\n    for (const [index, rec] of records.entries()) {\n      rec.index = index + 1\n    }\n  }\n\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,SAAD,IAA+B;EAC5D,MAAM,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,IAAqBH,SAAS,CAACI,KAAV,CAAgB,GAAhB,CAA3B;EAEA,MAAMC,WAAW,GAAI,GAAEH,KAAM,IAAGC,GAAI,IAAGF,IAAK,EAA5C;EAEA,OAAOI,WAAP;AACH,CANM;AAQP,OAAO,MAAMC,qBAAqB,GAAG,CAAEC,aAAF,EAAyBC,OAAzB,KAA6C;EAC9EA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACH,aAAD,CAAZ,IAA+BK,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACJ,aAAD,CAAZ,CAAtD,EAD8E,CAE9E;;EACA,KAAK,MAAM,CAACO,KAAD,EAAQC,GAAR,CAAX,IAA2BP,OAAO,CAACQ,OAAR,EAA3B,EAA8C;IAC5CD,GAAG,CAACD,KAAJ,GAAYA,KAAK,GAAG,CAApB;EACD;AACF,CANI"}