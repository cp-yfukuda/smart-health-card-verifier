{"version":3,"names":["sortRecordByDateField","ResourceType","isResourceType","getVerifierInitOption","VerifierKey","cvxCodes","vaccineCodesHash","parse","jwsPayload","getAcceptedVaccineCodes","vaccinationData","entries","vc","credentialSubject","fhirBundle","entry","immunizationEntries","filter","Immunization","map","resource","getVaccineCodesHash","index","status","lotNumber","performer","vaccineCode","occurrenceDateTime","code","coding","isValidVaccinationCode","includes","isVaccineShotDone","toLowerCase","console","log","String","join","vaccineName","vaccinationDate","vaccinator","actor","display","push","resourceType"],"sources":["ImmunizationRecordParser.ts"],"sourcesContent":["import { sortRecordByDateField } from '../../../utils/utils'\nimport { ResourceType, isResourceType } from '../fhirTypes'\nimport type { RecordEntry } from 'verifier-sdk'\nimport  { getVerifierInitOption, VerifierKey } from '../../../models/Config'\nimport type { JWSPayload, ParserFunction } from '../types'\n\nvar cvxCodes: string[] | null  = null\nvar vaccineCodesHash: { [key: string]: string } | null =  null\n\nconst parse: ParserFunction  = async (jwsPayload: JWSPayload): Promise< RecordEntry[] | null > => {\n  cvxCodes = cvxCodes || await getVerifierInitOption().getAcceptedVaccineCodes( VerifierKey )\n  const vaccinationData: RecordEntry[] = []\n  const entries = jwsPayload?.vc?.credentialSubject?.fhirBundle?.entry\n\n  const immunizationEntries = entries\n    ?.filter((entry: any) => {\n      return isResourceType( entry, ResourceType.Immunization )\n    })\n    .map((entry: any) => entry.resource)\n\n    vaccineCodesHash = vaccineCodesHash || getVerifierInitOption().getVaccineCodesHash()\n\n  for (const [index, entry] of immunizationEntries.entries()) {\n    const { status, lotNumber, performer, vaccineCode, occurrenceDateTime } = entry\n    const { code } = vaccineCode?.coding[0]\n    const isValidVaccinationCode = code && cvxCodes.includes(code)\n    const isVaccineShotDone = ( status || '').toLowerCase() === 'completed'\n    if (!isValidVaccinationCode) {\n      console.log(\n        `Immunization.vaccineCode.code (${String(code)}) requires valid COVID-19 code (${String(cvxCodes.join(','))}).`,\n      )\n    }\n\n    if (!isVaccineShotDone) {\n      console.log(`Immunization.status should be \"completed\", but it is ${String(status)}`)\n    }\n\n    const vaccineName = vaccineCodesHash[code]\n    const vaccinationDate = occurrenceDateTime\n\n    let vaccinator = ''\n    if (performer) {\n      vaccinator = performer[0]?.actor?.display || ''\n    }\n\n    if (isVaccineShotDone && isValidVaccinationCode) {\n      vaccinationData.push({\n        index: ( index + 1),\n        resourceType:ResourceType.Immunization,\n        lotNumber,\n        vaccinator,\n        vaccineName,\n        vaccinationDate,\n      })\n    }\n  }\n\n  sortRecordByDateField('vaccinationDate', vaccinationData)\n  return vaccinationData\n}\n\nexport default parse\n"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,sBAAtC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,cAA7C;AAEA,SAAUC,qBAAV,EAAiCC,WAAjC,QAAoD,wBAApD;AAGA,IAAIC,QAAyB,GAAI,IAAjC;AACA,IAAIC,gBAAkD,GAAI,IAA1D;;AAEA,MAAMC,KAAqB,GAAI,MAAOC,UAAP,IAAmE;EAAA;;EAChGH,QAAQ,GAAGA,QAAQ,KAAI,MAAMF,qBAAqB,GAAGM,uBAAxB,CAAiDL,WAAjD,CAAV,CAAnB;EACA,MAAMM,eAA8B,GAAG,EAAvC;EACA,MAAMC,OAAO,GAAGH,UAAH,aAAGA,UAAH,yCAAGA,UAAU,CAAEI,EAAf,4EAAG,eAAgBC,iBAAnB,oFAAG,sBAAmCC,UAAtC,2DAAG,uBAA+CC,KAA/D;EAEA,MAAMC,mBAAmB,GAAGL,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAC/BM,MADwB,CAChBF,KAAD,IAAgB;IACvB,OAAOb,cAAc,CAAEa,KAAF,EAASd,YAAY,CAACiB,YAAtB,CAArB;EACD,CAHyB,EAIzBC,GAJyB,CAIpBJ,KAAD,IAAgBA,KAAK,CAACK,QAJD,CAA5B;EAMEd,gBAAgB,GAAGA,gBAAgB,IAAIH,qBAAqB,GAAGkB,mBAAxB,EAAvC;;EAEF,KAAK,MAAM,CAACC,KAAD,EAAQP,KAAR,CAAX,IAA6BC,mBAAmB,CAACL,OAApB,EAA7B,EAA4D;IAC1D,MAAM;MAAEY,MAAF;MAAUC,SAAV;MAAqBC,SAArB;MAAgCC,WAAhC;MAA6CC;IAA7C,IAAoEZ,KAA1E;IACA,MAAM;MAAEa;IAAF,IAAWF,WAAX,aAAWA,WAAX,uBAAWA,WAAW,CAAEG,MAAb,CAAoB,CAApB,CAAjB;IACA,MAAMC,sBAAsB,GAAGF,IAAI,IAAIvB,QAAQ,CAAC0B,QAAT,CAAkBH,IAAlB,CAAvC;IACA,MAAMI,iBAAiB,GAAG,CAAET,MAAM,IAAI,EAAZ,EAAgBU,WAAhB,OAAkC,WAA5D;;IACA,IAAI,CAACH,sBAAL,EAA6B;MAC3BI,OAAO,CAACC,GAAR,CACG,kCAAiCC,MAAM,CAACR,IAAD,CAAO,mCAAkCQ,MAAM,CAAC/B,QAAQ,CAACgC,IAAT,CAAc,GAAd,CAAD,CAAqB,IAD9G;IAGD;;IAED,IAAI,CAACL,iBAAL,EAAwB;MACtBE,OAAO,CAACC,GAAR,CAAa,wDAAuDC,MAAM,CAACb,MAAD,CAAS,EAAnF;IACD;;IAED,MAAMe,WAAW,GAAGhC,gBAAgB,CAACsB,IAAD,CAApC;IACA,MAAMW,eAAe,GAAGZ,kBAAxB;IAEA,IAAIa,UAAU,GAAG,EAAjB;;IACA,IAAIf,SAAJ,EAAe;MAAA;;MACbe,UAAU,GAAG,gBAAAf,SAAS,CAAC,CAAD,CAAT,iFAAcgB,KAAd,wEAAqBC,OAArB,KAAgC,EAA7C;IACD;;IAED,IAAIV,iBAAiB,IAAIF,sBAAzB,EAAiD;MAC/CpB,eAAe,CAACiC,IAAhB,CAAqB;QACnBrB,KAAK,EAAIA,KAAK,GAAG,CADE;QAEnBsB,YAAY,EAAC3C,YAAY,CAACiB,YAFP;QAGnBM,SAHmB;QAInBgB,UAJmB;QAKnBF,WALmB;QAMnBC;MANmB,CAArB;IAQD;EACF;;EAEDvC,qBAAqB,CAAC,iBAAD,EAAoBU,eAApB,CAArB;EACA,OAAOA,eAAP;AACD,CAlDD;;AAoDA,eAAeH,KAAf"}