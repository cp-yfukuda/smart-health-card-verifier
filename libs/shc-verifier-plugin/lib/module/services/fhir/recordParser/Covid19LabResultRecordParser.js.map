{"version":3,"names":["ResourceType","R4Observation","sortRecordByDateField","parse","jwsPayload","_jwsPayload$vc","_jwsPayload$vc$creden","_jwsPayload$vc$creden2","_entries$find","parser","labResultData","entries","vc","credentialSubject","fhirBundle","entry","patientURL","find","_entry$resource","resource","resourceType","Patient","fullUrl","observationEntries","filter","_entry$resource2","_entry$resource3","_entry$resource3$subj","Observation","subject","reference","index","resourceItem","push"],"sources":["Covid19LabResultRecordParser.ts"],"sourcesContent":["import { ResourceType } from '../fhirTypes'\nimport type { RecordEntry } from 'parser-sdk'\nimport R4Observation from './labResultParser/versions/R4Observation'\nimport { sortRecordByDateField } from '../../../utils/utils'\nimport type { JWSPayload, ParserFunction, ObservationParser}  from '../types'\nconst parse: ParserFunction  =(jwsPayload: JWSPayload): RecordEntry[] | null=> {\n  const parser: ObservationParser = new R4Observation()\n  const labResultData:any[] = []\n  const entries: any[] = jwsPayload?.vc?.credentialSubject?.fhirBundle?.entry\n\n  /* 1. get the patient \n     2. get the lab result record for the first patient */\n  \n  const patientURL = entries?.find((entry: any) => {\n    return ( entry?.resource?.resourceType === ResourceType.Patient )\n  })?.fullUrl\n\n  const observationEntries = entries?.filter((entry: any) => {\n    return ( entry?.resource?.resourceType === ResourceType.Observation &&\n               entry?.resource?.subject?.reference === patientURL )\n  })\n\n  for (const [index, entry] of observationEntries.entries()) {\n    const resourceItem = parser.parse( entry )  \n    labResultData.push({\n      ...resourceItem,\n      index: ( index + 1 ),\n      resourceType: ResourceType.Observation\n    })\n  }\n\n  sortRecordByDateField('effectiveDateTime', labResultData)\n  return labResultData\n}\n\nexport default parse\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,OAAOC,aAAa,MAAM,0CAA0C;AACpE,SAASC,qBAAqB,QAAQ,sBAAsB;AAE5D,MAAMC,KAAqB,GAAIC,UAAsB,IAA0B;EAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,aAAA;EAC7E,MAAMC,MAAyB,GAAG,IAAIR,aAAa,EAAE;EACrD,MAAMS,aAAmB,GAAG,EAAE;EAC9B,MAAMC,OAAc,GAAGP,UAAU,aAAVA,UAAU,wBAAAC,cAAA,GAAVD,UAAU,CAAEQ,EAAE,cAAAP,cAAA,wBAAAC,qBAAA,GAAdD,cAAA,CAAgBQ,iBAAiB,cAAAP,qBAAA,wBAAAC,sBAAA,GAAjCD,qBAAA,CAAmCQ,UAAU,cAAAP,sBAAA,uBAA7CA,sBAAA,CAA+CQ,KAAK;;EAE3E;AACF;;EAEE,MAAMC,UAAU,GAAGL,OAAO,aAAPA,OAAO,wBAAAH,aAAA,GAAPG,OAAO,CAAEM,IAAI,CAAEF,KAAU,IAAK;IAAA,IAAAG,eAAA;IAC/C,OAAS,CAAAH,KAAK,aAALA,KAAK,wBAAAG,eAAA,GAALH,KAAK,CAAEI,QAAQ,cAAAD,eAAA,uBAAfA,eAAA,CAAiBE,YAAY,MAAKpB,YAAY,CAACqB,OAAO;EACjE,CAAC,CAAC,cAAAb,aAAA,uBAFiBA,aAAA,CAEfc,OAAO;EAEX,MAAMC,kBAAkB,GAAGZ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,MAAM,CAAET,KAAU,IAAK;IAAA,IAAAU,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACzD,OAAS,CAAAZ,KAAK,aAALA,KAAK,wBAAAU,gBAAA,GAALV,KAAK,CAAEI,QAAQ,cAAAM,gBAAA,uBAAfA,gBAAA,CAAiBL,YAAY,MAAKpB,YAAY,CAAC4B,WAAW,IACxD,CAAAb,KAAK,aAALA,KAAK,wBAAAW,gBAAA,GAALX,KAAK,CAAEI,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBG,OAAO,cAAAF,qBAAA,uBAAxBA,qBAAA,CAA0BG,SAAS,MAAKd,UAAU;EAC/D,CAAC,CAAC;EAEF,KAAK,MAAM,CAACe,KAAK,EAAEhB,KAAK,CAAC,IAAIQ,kBAAkB,CAACZ,OAAO,EAAE,EAAE;IACzD,MAAMqB,YAAY,GAAGvB,MAAM,CAACN,KAAK,CAAEY,KAAK,CAAE;IAC1CL,aAAa,CAACuB,IAAI,CAAC;MACjB,GAAGD,YAAY;MACfD,KAAK,EAAIA,KAAK,GAAG,CAAG;MACpBX,YAAY,EAAEpB,YAAY,CAAC4B;IAC7B,CAAC,CAAC;EACJ;EAEA1B,qBAAqB,CAAC,mBAAmB,EAAEQ,aAAa,CAAC;EACzD,OAAOA,aAAa;AACtB,CAAC;AAED,eAAeP,KAAK"}