{"version":3,"names":["ErrorCode","Utils","InvalidError","validateSchema","objPathToSchema","fhirSchema","getPatientDataFromFhir","getRecordData","getRecordTypeFromPayload","validateBundleForRecordType","VerifierKey","getVerifierInitOption","getIssuerFromFHIR","payload","iss","issuer","getIssuedDateFromFHIR","nbf","res","isNaN","Date","getRecord","issuedDate","notFoundIssuer","message","verifierOption","issuerData","getIssuer","isIssuerNotFound","url","name","undefined","patientData","recordType","tagKeys","getTagKeys","recordEntries","length","NO_VALID_RECORD","document","types","vc","type","tagMap","key","indexOf","push","validate","fhirBundleJSON","isFhirBundleValid","fhirBundle","validateFhirBundle","Promise","reject","index","entry","entries","validateFhirBundleEntry","walkProperties","resource","resourceType","o","path","propType","join","validatePropType","fullUrl","test","console","log","FHIR_SCHEMA_ERROR","Array","CRITICAL_DATA_MISSING","i","toString","definitions","String","id","meta","security","Object","keys","text","display","reference","SCHEMA_ERROR"],"sources":["fhirBundle.ts"],"sourcesContent":["import { ErrorCode, Utils, InvalidError } from 'verifier-sdk'\nimport { validateSchema, objPathToSchema } from '../jws/schema'\nimport fhirSchema from '../../schemas/fhir-schema.json'\nimport { getPatientDataFromFhir } from './getPatiendDataFromFhir'\nimport getRecordData from './recordParser'\n/* this entry needs to match with ValidationProfilesFunctions keys */\nimport { RecordType, getRecordTypeFromPayload } from './fhirTypes'\nimport validateBundleForRecordType from './recordValidator'\nimport { VerifierKey, getVerifierInitOption } from '../../models/Config'\nimport type { JWSPayload, FhirBundle } from './types'\nimport type { BaseResources } from 'verifier-sdk'\n\nconst getIssuerFromFHIR = (payload: any): string => {\n  const { iss: issuer } = payload\n  return issuer\n}\n\nconst getIssuedDateFromFHIR = ( payload: any  ): Date | null => {\n  const { nbf: nbf } = payload\n  var res: Date | null = null; \n  if( !isNaN(nbf) ) {\n    res = new Date( nbf );\n  }\n  return res;\n}\n\nexport async function getRecord (payload: JWSPayload ): Promise<BaseResources>{\n  const issuer = getIssuerFromFHIR(payload)\n  const issuedDate = getIssuedDateFromFHIR( payload );\n  const notFoundIssuer = {\n    message: 'Issuer not found'\n  }\n  const verifierOption = getVerifierInitOption();\n  const issuerData = await verifierOption.getIssuer( VerifierKey, issuer) || notFoundIssuer\n  const { message } = issuerData\n  const isIssuerNotFound = message && message === 'Issuer not found'\n  \n  if (isIssuerNotFound) {\n    issuerData.url = issuer\n    issuerData.name = undefined\n  }\n\n\n  const patientData = getPatientDataFromFhir(payload)\n  const recordType  = getRecordTypeFromPayload(payload)\n  const tagKeys     = getTagKeys(payload)\n  const recordEntries = await getRecordData(recordType, payload)\n  if ( recordEntries?.length === 0 ) {\n    throw new InvalidError(ErrorCode.NO_VALID_RECORD)\n  }\n  const document = {\n    issuedDate,\n    issuerData,\n    patientData,\n    recordType\n  }\n  if( tagKeys ) {\n    document['tagKeys'] = tagKeys\n  }\n  if( recordEntries ) {\n    document['recordEntries'] = recordEntries\n  }\n  return document\n}\n\nexport function getTagKeys( payload: JWSPayload ): string[] {\n  let res:string[] = []\n  let types = payload?.vc?.type || []\n  let tagMap = {\n    \"https://smarthealth.cards#covid19\":\"Covid19\",\n  }\n  for( const key in tagMap){\n    if( types.indexOf(key) >= 0 ) {\n      res.push(tagMap[key])\n    }\n  }\n  return res\n}\n\nexport async function validate ( recordType: RecordType, fhirBundleJSON: object | undefined): Promise<boolean> {\n  let isFhirBundleValid = false\n\n  if ( typeof fhirBundleJSON !== 'undefined') {\n    const fhirBundle = fhirBundleJSON as FhirBundle\n\n    if ( fhirBundle ) {\n      isFhirBundleValid = validateFhirBundle(fhirBundle)\n    }\n    if (!isFhirBundleValid) {\n      return Promise.reject(false)\n    }\n\n    // Validate each resource of .entry[]\n    for (const [index, entry] of fhirBundle.entry.entries()) {\n      validateFhirBundleEntry(entry, index)\n      // walks the property tree of this resource object\n      // the callback receives the child property and it's path objPathToSchema() maps a schema property to a property path\n      // currently, oneOf types will break this system\n      Utils.walkProperties(\n        entry.resource as unknown as Record<string, unknown>,\n        [entry.resource.resourceType],\n        (o: Record<string, unknown>, path: string[]) => {\n          const propType = objPathToSchema(path.join('.'))\n          validatePropType(propType, index, path, o)\n        },\n      )\n\n      // with Bundle.entry.fullUrl populated with short resource-scheme URIs (e.g., {'fullUrl': 'resource:0})\n      if (typeof entry.fullUrl !== 'string' || !/resource:\\d+/.test(entry.fullUrl)) {\n        console.log(\n          'fhirBundle.entry.fullUrl should be short resource-scheme URIs (e.g., {\"fullUrl\": \"resource:0\"}',\n          ErrorCode.FHIR_SCHEMA_ERROR,\n        )\n      }\n    }\n    return validateBundleForRecordType( recordType, fhirBundle )\n      \n  }\n  return false\n}\n\nfunction validateFhirBundle (fhirBundle: FhirBundle) {\n  if (fhirBundle === undefined) {\n    return false\n  }\n\n  // failures will be recorded in the console.log\n  if (!validateSchema(fhirSchema, fhirBundle)) {\n    return false\n  }\n\n  // to continue validation, we must have a list of resources in .entry[]\n  if (!fhirBundle.entry || !(fhirBundle.entry instanceof Array) || fhirBundle.entry.length === 0) {\n    // The schema check above will list the expected properties/type\n    console.log('FhirBundle.entry[] required to continue.', ErrorCode.CRITICAL_DATA_MISSING)\n    return false\n  }\n\n  return true\n}\n\nfunction validateFhirBundleEntry (entry: any, i: number) {\n  const resource = entry.resource\n  if (resource == null) {\n    console.log(`Schema: entry[${i.toString()}].resource missing`)\n  }\n\n  if (!resource.resourceType) {\n    console.log(`Schema: entry[${i.toString()}].resource.resourceType missing`)\n  }\n\n  if (!(fhirSchema.definitions as Record<string, unknown>)[resource.resourceType]) {\n    console.log(\n      `Schema: entry[${i.toString()}].resource.resourceType '${String( resource.resourceType )}' unknown`,\n    )\n  }\n\n  // validateSchema({ $ref: 'https://smarthealth.cards/schema/fhir-schema.json#/definitions/' + resource.resourceType }, resource, ['', 'entry', i.toString(), resource.resourceType].join('/'))\n  if (resource.id) {\n    console.log(\n      `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}]\\\n       should not include .id elements`,\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (resource.meta) {\n    // resource.meta.security allowed as special case, however, no other properties may be included on .meta\n    if (!resource.meta.security || Object.keys(resource.meta).length > 1) {\n      console.log(\n        `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}].meta \\\n       should only include .security property with an array of identity assurance codes`,\n        ErrorCode.FHIR_SCHEMA_ERROR,\n      )\n    }\n  }\n\n  if (resource.text) {\n    console.log(\n      `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}] \\\n         should not include .text elements`,\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n}\n\nfunction validatePropType (propType: string, i: number, path: string[], o: Record<string, unknown>) {\n  if (propType === 'CodeableConcept' && o.text) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (CodeableConcept) should not include .text elements',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (propType === 'Coding' && o.display) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (Coding) should not include .display elements',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (propType === 'Reference' && o.reference && !/[^:]+:\\d+/.test(o.reference as string)) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (Reference) should be short resource-scheme URIs (e.g., {“patient”: {“reference”: “resource:0”}})',\n      ErrorCode.SCHEMA_ERROR,\n    )\n  }\n\n  if (\n    // on empty string, empty object, empty array\n    (o instanceof Array && o.length === 0) ||\n    (typeof o === 'string' && o === '') ||\n    (o instanceof Object && Object.keys(o).length === 0)\n  ) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' is empty. Empty elements are invalid.',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n}\n"],"mappings":"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"}