{"version":3,"names":["validate","qrValidate","setVerifierInitOption","SHCVerifier","constructor","options","shc","console","info","canSupport","payloads","length","startsWith","Promise","resolve","reject"],"sources":["index.tsx"],"sourcesContent":["import type { IParserBase, BaseResponse } from 'parser-sdk'\nimport { validate  as qrValidate } from './qr' \nimport type { SHCVerifierOption, SHCVerifierType } from './types'\nimport { setVerifierInitOption } from \"./models/Config\"\nexport  * from './types'\n\n\n\n\nexport class SHCVerifier implements IParserBase {\n\n  constructor ( options: SHCVerifierType ) {\n    setVerifierInitOption( options.shc as SHCVerifierOption )\n    console.info(\"SHCVerifier: initialized\")\n  }\n  \n  canSupport( payloads: string[] ): Promise< IParserBase|null > {\n    if ( payloads.length > 0 &&\n         payloads[0].length > 4 && \n         payloads[0].startsWith(\"shc:/\")) {\n      return Promise.resolve( this )\n    }\n    return Promise.reject(null)\n  }\n\n  async validate(payloads: string[] ): Promise< null | BaseResponse > {\n    return await qrValidate( payloads );\n  }\n}\n"],"mappings":"AACA,SAASA,QAAQ,IAAKC,UAAU,QAAQ,MAAM;AAE9C,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,cAAe,SAAS;AAKxB,OAAO,MAAMC,WAAW,CAAwB;EAE9CC,WAAWA,CAAGC,OAAwB,EAAG;IACvCH,qBAAqB,CAAEG,OAAO,CAACC,GAAG,CAAuB;IACzDC,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;EAC1C;EAEAC,UAAUA,CAAEC,QAAkB,EAAgC;IAC5D,IAAKA,QAAQ,CAACC,MAAM,GAAG,CAAC,IACnBD,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IACtBD,QAAQ,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE;MACpC,OAAOC,OAAO,CAACC,OAAO,CAAE,IAAI,CAAE;IAChC;IACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAI,CAAC;EAC7B;EAEA,MAAMf,QAAQA,CAACU,QAAkB,EAAmC;IAClE,OAAO,MAAMT,UAAU,CAAES,QAAQ,CAAE;EACrC;AACF"}