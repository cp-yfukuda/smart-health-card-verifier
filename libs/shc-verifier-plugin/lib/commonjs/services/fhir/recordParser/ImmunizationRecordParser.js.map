{"version":3,"names":["cvxCodes","vaccineCodesHash","parse","jwsPayload","getVerifierInitOption","getAcceptedVaccineCodes","VerifierKey","vaccinationData","entries","vc","credentialSubject","fhirBundle","entry","immunizationEntries","filter","isResourceType","ResourceType","Immunization","map","resource","getVaccineCodesHash","index","status","lotNumber","performer","vaccineCode","occurrenceDateTime","code","coding","isValidVaccinationCode","includes","isVaccineShotDone","toLowerCase","console","log","String","join","system","display","manufacturerName","groupDisplay","vaccinationDate","vaccinator","actor","push","systemKey","systemCode","resourceType","vaccineName","groupName","sortRecordByDateField"],"sources":["ImmunizationRecordParser.ts"],"sourcesContent":["import { sortRecordByDateField } from '../../../utils/utils'\nimport { ResourceType, isResourceType } from '../fhirTypes'\nimport type { RecordEntry, VaccineCodeItemType } from 'verifier-sdk'\nimport  { getVerifierInitOption, VerifierKey } from '../../../models/Config'\nimport type { JWSPayload, ParserFunction } from '../types'\n\nvar cvxCodes: string[] | null  = null\nvar vaccineCodesHash: { [key: string]: VaccineCodeItemType } =  {}\n\nconst parse: ParserFunction  = async (jwsPayload: JWSPayload): Promise< RecordEntry[] | null > => {\n  cvxCodes = cvxCodes || await getVerifierInitOption().getAcceptedVaccineCodes( VerifierKey )\n  const vaccinationData: RecordEntry[] = []\n  const entries = jwsPayload?.vc?.credentialSubject?.fhirBundle?.entry\n\n  const immunizationEntries = entries\n    ?.filter((entry: any) => {\n      return isResourceType( entry, ResourceType.Immunization )\n    })\n    .map((entry: any) => entry.resource)\n\n  vaccineCodesHash = getVerifierInitOption().getVaccineCodesHash()\n  for (const [index, entry] of immunizationEntries.entries()) {\n    const { status, lotNumber, performer, vaccineCode, occurrenceDateTime } = entry\n    const { code } = vaccineCode?.coding[0]\n    const isValidVaccinationCode = code && cvxCodes.includes(code)\n    const isVaccineShotDone = ( status || '').toLowerCase() === 'completed'\n    if (!isValidVaccinationCode) {\n      console.log(\n        `Immunization.vaccineCode.code (${String(code)}) requires valid COVID-19 code (${String(cvxCodes.join(','))}).`,\n      )\n    }\n\n    if (!isVaccineShotDone) {\n      console.log(`Immunization.status should be \"completed\", but it is ${String(status)}`)\n    }\n    const { system, display, manufacturerName, groupDisplay } = vaccineCodesHash[code] || {}\n    const vaccinationDate = occurrenceDateTime\n\n    let vaccinator = ''\n    if (performer) {\n      vaccinator = performer[0]?.actor?.display || ''\n    }\n\n    if (isVaccineShotDone && isValidVaccinationCode) {\n      vaccinationData.push({\n        index: ( index + 1),\n        systemKey: system,\n        systemCode: code,\n        resourceType:ResourceType.Immunization,\n        lotNumber,\n        vaccinator,\n        vaccineName: display,\n        manufacturerName: manufacturerName || null,\n        groupName: groupDisplay,\n        vaccinationDate,\n      })\n    }\n  }\n  sortRecordByDateField('vaccinationDate', vaccinationData)\n  return vaccinationData\n}\n\nexport default parse\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA,IAAIA,QAAyB,GAAI,IAAjC;AACA,IAAIC,gBAAwD,GAAI,EAAhE;;AAEA,MAAMC,KAAqB,GAAI,MAAOC,UAAP,IAAmE;EAAA;;EAChGH,QAAQ,GAAGA,QAAQ,KAAI,MAAM,IAAAI,6BAAA,IAAwBC,uBAAxB,CAAiDC,mBAAjD,CAAV,CAAnB;EACA,MAAMC,eAA8B,GAAG,EAAvC;EACA,MAAMC,OAAO,GAAGL,UAAH,aAAGA,UAAH,yCAAGA,UAAU,CAAEM,EAAf,4EAAG,eAAgBC,iBAAnB,oFAAG,sBAAmCC,UAAtC,2DAAG,uBAA+CC,KAA/D;EAEA,MAAMC,mBAAmB,GAAGL,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAC/BM,MADwB,CAChBF,KAAD,IAAgB;IACvB,OAAO,IAAAG,yBAAA,EAAgBH,KAAhB,EAAuBI,uBAAA,CAAaC,YAApC,CAAP;EACD,CAHyB,EAIzBC,GAJyB,CAIpBN,KAAD,IAAgBA,KAAK,CAACO,QAJD,CAA5B;EAMAlB,gBAAgB,GAAG,IAAAG,6BAAA,IAAwBgB,mBAAxB,EAAnB;;EACA,KAAK,MAAM,CAACC,KAAD,EAAQT,KAAR,CAAX,IAA6BC,mBAAmB,CAACL,OAApB,EAA7B,EAA4D;IAC1D,MAAM;MAAEc,MAAF;MAAUC,SAAV;MAAqBC,SAArB;MAAgCC,WAAhC;MAA6CC;IAA7C,IAAoEd,KAA1E;IACA,MAAM;MAAEe;IAAF,IAAWF,WAAX,aAAWA,WAAX,uBAAWA,WAAW,CAAEG,MAAb,CAAoB,CAApB,CAAjB;IACA,MAAMC,sBAAsB,GAAGF,IAAI,IAAI3B,QAAQ,CAAC8B,QAAT,CAAkBH,IAAlB,CAAvC;IACA,MAAMI,iBAAiB,GAAG,CAAET,MAAM,IAAI,EAAZ,EAAgBU,WAAhB,OAAkC,WAA5D;;IACA,IAAI,CAACH,sBAAL,EAA6B;MAC3BI,OAAO,CAACC,GAAR,CACG,kCAAiCC,MAAM,CAACR,IAAD,CAAO,mCAAkCQ,MAAM,CAACnC,QAAQ,CAACoC,IAAT,CAAc,GAAd,CAAD,CAAqB,IAD9G;IAGD;;IAED,IAAI,CAACL,iBAAL,EAAwB;MACtBE,OAAO,CAACC,GAAR,CAAa,wDAAuDC,MAAM,CAACb,MAAD,CAAS,EAAnF;IACD;;IACD,MAAM;MAAEe,MAAF;MAAUC,OAAV;MAAmBC,gBAAnB;MAAqCC;IAArC,IAAsDvC,gBAAgB,CAAC0B,IAAD,CAAhB,IAA0B,EAAtF;IACA,MAAMc,eAAe,GAAGf,kBAAxB;IAEA,IAAIgB,UAAU,GAAG,EAAjB;;IACA,IAAIlB,SAAJ,EAAe;MAAA;;MACbkB,UAAU,GAAG,gBAAAlB,SAAS,CAAC,CAAD,CAAT,iFAAcmB,KAAd,wEAAqBL,OAArB,KAAgC,EAA7C;IACD;;IAED,IAAIP,iBAAiB,IAAIF,sBAAzB,EAAiD;MAC/CtB,eAAe,CAACqC,IAAhB,CAAqB;QACnBvB,KAAK,EAAIA,KAAK,GAAG,CADE;QAEnBwB,SAAS,EAAER,MAFQ;QAGnBS,UAAU,EAAEnB,IAHO;QAInBoB,YAAY,EAAC/B,uBAAA,CAAaC,YAJP;QAKnBM,SALmB;QAMnBmB,UANmB;QAOnBM,WAAW,EAAEV,OAPM;QAQnBC,gBAAgB,EAAEA,gBAAgB,IAAI,IARnB;QASnBU,SAAS,EAAET,YATQ;QAUnBC;MAVmB,CAArB;IAYD;EACF;;EACD,IAAAS,4BAAA,EAAsB,iBAAtB,EAAyC3C,eAAzC;EACA,OAAOA,eAAP;AACD,CAnDD;;eAqDeL,K"}