{"version":3,"names":["getRecord","payload","header","console","info","JSON","stringify","issuer","getIssuerFromFhir","notFoundIssuer","message","verifierOption","getVerifierInitOption","issuerData","getIssuer","VerifierKey","isIssuerNotFound","url","name","undefined","patientData","getPatientDataFromFhir","recordType","getRecordTypeFromPayload","tagKeys","getTagKeys","recordEntries","getRecordData","length","InvalidError","ErrorCode","NO_VALID_RECORD","document","res","types","vc","type","tagMap","key","indexOf","push","validate","fhirBundleJSON","isFhirBundleValid","fhirBundle","validateFhirBundle","Promise","reject","index","entry","entries","validateFhirBundleEntry","Utils","walkProperties","resource","resourceType","o","path","propType","objPathToSchema","join","validatePropType","fullUrl","test","log","FHIR_SCHEMA_ERROR","validateBundleForRecordType","validateSchema","fhirSchema","Array","CRITICAL_DATA_MISSING","i","toString","definitions","String","id","meta","security","Object","keys","text","display","reference","SCHEMA_ERROR"],"sources":["fhirBundle.ts"],"sourcesContent":["import { ErrorCode, Utils, InvalidError } from 'verifier-sdk'\nimport { validateSchema, objPathToSchema } from '../jws/schema'\nimport fhirSchema from '../../schemas/fhir-schema.json'\nimport { getPatientDataFromFhir } from './getPatiendDataFromFhir'\nimport getRecordData from './recordParser'\nimport { getIssuerFromFhir } from '../../helpers/getIssuerFromFhir'\n/* this entry needs to match with ValidationProfilesFunctions keys */\nimport { RecordType, getRecordTypeFromPayload } from './fhirTypes'\nimport validateBundleForRecordType from './recordValidator'\nimport { VerifierKey, getVerifierInitOption } from '../../models/Config'\nimport type { JWSPayload, FhirBundle } from './types'\nimport type { RecordEntry } from 'verifier-sdk'\n\ninterface ResultType {\n  issuerData:{\n    url: string | null\n    name?: string\n  };\n  isValid?: boolean;\n  recordType: RecordType;\n  tagKeys: string[];\n  recordEntries: RecordEntry[] | null;\n}\n\n\nexport async function getRecord (payload: JWSPayload, header: any): Promise<ResultType>{\n  console.info( \"header ====\\r\\n\" + JSON.stringify( header ) )\n  console.info( \"payload ====\\r\\n\" + JSON.stringify( payload ) )\n  const issuer = getIssuerFromFhir(payload)\n  const notFoundIssuer = {\n    message: 'Issuer not found'\n  }\n  const verifierOption = getVerifierInitOption();\n  const issuerData = await verifierOption.getIssuer( VerifierKey, issuer) || notFoundIssuer\n  const { message } = issuerData\n  const isIssuerNotFound = message && message === 'Issuer not found'\n  if (isIssuerNotFound) {\n    issuerData.url = issuer\n    issuerData.name = undefined\n  }\n\n  const patientData = getPatientDataFromFhir(payload)\n  const recordType  = getRecordTypeFromPayload(payload)\n  const tagKeys     = getTagKeys(payload)\n  const recordEntries = await getRecordData(recordType, payload)\n  if ( recordEntries?.length === 0 ) {\n    throw new InvalidError(ErrorCode.NO_VALID_RECORD)\n  }\n  const document = {\n    issuerData,\n    patientData,\n    recordType,\n    recordEntries,\n    tagKeys\n  }\n  return document\n}\n\nexport function getTagKeys( payload: JWSPayload ): string[] {\n  let res:string[] = []\n  let types = payload?.vc?.type || []\n  let tagMap = {\n    \"https://smarthealth.cards#covid19\":\"Covid19\",\n  }\n  for( const key in tagMap){\n    if( types.indexOf(key) >= 0 ) {\n      res.push(tagMap[key])\n    }\n  }\n  return res\n}\n\nexport async function validate ( recordType: RecordType, fhirBundleJSON: object | undefined): Promise<boolean> {\n  let isFhirBundleValid = false\n\n  if ( typeof fhirBundleJSON !== 'undefined') {\n    const fhirBundle = fhirBundleJSON as FhirBundle\n\n    if ( fhirBundle ) {\n      isFhirBundleValid = validateFhirBundle(fhirBundle)\n    }\n    if (!isFhirBundleValid) {\n      return Promise.reject(false)\n    }\n\n    // Validate each resource of .entry[]\n    for (const [index, entry] of fhirBundle.entry.entries()) {\n      validateFhirBundleEntry(entry, index)\n      // walks the property tree of this resource object\n      // the callback receives the child property and it's path objPathToSchema() maps a schema property to a property path\n      // currently, oneOf types will break this system\n      Utils.walkProperties(\n        entry.resource as unknown as Record<string, unknown>,\n        [entry.resource.resourceType],\n        (o: Record<string, unknown>, path: string[]) => {\n          const propType = objPathToSchema(path.join('.'))\n          validatePropType(propType, index, path, o)\n        },\n      )\n\n      // with Bundle.entry.fullUrl populated with short resource-scheme URIs (e.g., {'fullUrl': 'resource:0})\n      if (typeof entry.fullUrl !== 'string' || !/resource:\\d+/.test(entry.fullUrl)) {\n        console.log(\n          'fhirBundle.entry.fullUrl should be short resource-scheme URIs (e.g., {\"fullUrl\": \"resource:0\"}',\n          ErrorCode.FHIR_SCHEMA_ERROR,\n        )\n      }\n    }\n    return validateBundleForRecordType( recordType, fhirBundle )\n      \n  }\n  return false\n}\n\nfunction validateFhirBundle (fhirBundle: FhirBundle) {\n  if (fhirBundle === undefined) {\n    return false\n  }\n\n  // failures will be recorded in the console.log\n  if (!validateSchema(fhirSchema, fhirBundle)) {\n    return false\n  }\n\n  // to continue validation, we must have a list of resources in .entry[]\n  if (!fhirBundle.entry || !(fhirBundle.entry instanceof Array) || fhirBundle.entry.length === 0) {\n    // The schema check above will list the expected properties/type\n    console.log('FhirBundle.entry[] required to continue.', ErrorCode.CRITICAL_DATA_MISSING)\n    return false\n  }\n\n  return true\n}\n\nfunction validateFhirBundleEntry (entry: any, i: number) {\n  const resource = entry.resource\n  if (resource == null) {\n    console.log(`Schema: entry[${i.toString()}].resource missing`)\n  }\n\n  if (!resource.resourceType) {\n    console.log(`Schema: entry[${i.toString()}].resource.resourceType missing`)\n  }\n\n  if (!(fhirSchema.definitions as Record<string, unknown>)[resource.resourceType]) {\n    console.log(\n      `Schema: entry[${i.toString()}].resource.resourceType '${String( resource.resourceType )}' unknown`,\n    )\n  }\n\n  // validateSchema({ $ref: 'https://smarthealth.cards/schema/fhir-schema.json#/definitions/' + resource.resourceType }, resource, ['', 'entry', i.toString(), resource.resourceType].join('/'))\n  if (resource.id) {\n    console.log(\n      `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}]\\\n       should not include .id elements`,\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (resource.meta) {\n    // resource.meta.security allowed as special case, however, no other properties may be included on .meta\n    if (!resource.meta.security || Object.keys(resource.meta).length > 1) {\n      console.log(\n        `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}].meta \\\n       should only include .security property with an array of identity assurance codes`,\n        ErrorCode.FHIR_SCHEMA_ERROR,\n      )\n    }\n  }\n\n  if (resource.text) {\n    console.log(\n      `Bundle.entry[${i.toString()}].resource[${String(resource.resourceType)}] \\\n         should not include .text elements`,\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n}\n\nfunction validatePropType (propType: string, i: number, path: string[], o: Record<string, unknown>) {\n  if (propType === 'CodeableConcept' && o.text) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (CodeableConcept) should not include .text elements',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (propType === 'Coding' && o.display) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (Coding) should not include .display elements',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n\n  if (propType === 'Reference' && o.reference && !/[^:]+:\\d+/.test(o.reference as string)) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' (Reference) should be short resource-scheme URIs (e.g., {“patient”: {“reference”: “resource:0”}})',\n      ErrorCode.SCHEMA_ERROR,\n    )\n  }\n\n  if (\n    // on empty string, empty object, empty array\n    (o instanceof Array && o.length === 0) ||\n    (typeof o === 'string' && o === '') ||\n    (o instanceof Object && Object.keys(o).length === 0)\n  ) {\n    console.log(\n      'fhirBundle.entry[' +\n        i.toString() +\n        ']' +\n        '.resource.' +\n        path.join('.') +\n        ' is empty. Empty elements are invalid.',\n      ErrorCode.FHIR_SCHEMA_ERROR,\n    )\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAHA;AAmBO,eAAeA,SAAf,CAA0BC,OAA1B,EAA+CC,MAA/C,EAAgF;EACrFC,OAAO,CAACC,IAAR,CAAc,oBAAoBC,IAAI,CAACC,SAAL,CAAgBJ,MAAhB,CAAlC;EACAC,OAAO,CAACC,IAAR,CAAc,qBAAqBC,IAAI,CAACC,SAAL,CAAgBL,OAAhB,CAAnC;EACA,MAAMM,MAAM,GAAG,IAAAC,oCAAA,EAAkBP,OAAlB,CAAf;EACA,MAAMQ,cAAc,GAAG;IACrBC,OAAO,EAAE;EADY,CAAvB;EAGA,MAAMC,cAAc,GAAG,IAAAC,6BAAA,GAAvB;EACA,MAAMC,UAAU,GAAG,OAAMF,cAAc,CAACG,SAAf,CAA0BC,mBAA1B,EAAuCR,MAAvC,CAAN,KAAwDE,cAA3E;EACA,MAAM;IAAEC;EAAF,IAAcG,UAApB;EACA,MAAMG,gBAAgB,GAAGN,OAAO,IAAIA,OAAO,KAAK,kBAAhD;;EACA,IAAIM,gBAAJ,EAAsB;IACpBH,UAAU,CAACI,GAAX,GAAiBV,MAAjB;IACAM,UAAU,CAACK,IAAX,GAAkBC,SAAlB;EACD;;EAED,MAAMC,WAAW,GAAG,IAAAC,8CAAA,EAAuBpB,OAAvB,CAApB;EACA,MAAMqB,UAAU,GAAI,IAAAC,mCAAA,EAAyBtB,OAAzB,CAApB;EACA,MAAMuB,OAAO,GAAOC,UAAU,CAACxB,OAAD,CAA9B;EACA,MAAMyB,aAAa,GAAG,MAAM,IAAAC,qBAAA,EAAcL,UAAd,EAA0BrB,OAA1B,CAA5B;;EACA,IAAK,CAAAyB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEE,MAAf,MAA0B,CAA/B,EAAmC;IACjC,MAAM,IAAIC,yBAAJ,CAAiBC,sBAAA,CAAUC,eAA3B,CAAN;EACD;;EACD,MAAMC,QAAQ,GAAG;IACfnB,UADe;IAEfO,WAFe;IAGfE,UAHe;IAIfI,aAJe;IAKfF;EALe,CAAjB;EAOA,OAAOQ,QAAP;AACD;;AAEM,SAASP,UAAT,CAAqBxB,OAArB,EAAqD;EAAA;;EAC1D,IAAIgC,GAAY,GAAG,EAAnB;EACA,IAAIC,KAAK,GAAG,CAAAjC,OAAO,SAAP,IAAAA,OAAO,WAAP,2BAAAA,OAAO,CAAEkC,EAAT,4DAAaC,IAAb,KAAqB,EAAjC;EACA,IAAIC,MAAM,GAAG;IACX,qCAAoC;EADzB,CAAb;;EAGA,KAAK,MAAMC,GAAX,IAAkBD,MAAlB,EAAyB;IACvB,IAAIH,KAAK,CAACK,OAAN,CAAcD,GAAd,KAAsB,CAA1B,EAA8B;MAC5BL,GAAG,CAACO,IAAJ,CAASH,MAAM,CAACC,GAAD,CAAf;IACD;EACF;;EACD,OAAOL,GAAP;AACD;;AAEM,eAAeQ,QAAf,CAA0BnB,UAA1B,EAAkDoB,cAAlD,EAAwG;EAC7G,IAAIC,iBAAiB,GAAG,KAAxB;;EAEA,IAAK,OAAOD,cAAP,KAA0B,WAA/B,EAA4C;IAC1C,MAAME,UAAU,GAAGF,cAAnB;;IAEA,IAAKE,UAAL,EAAkB;MAChBD,iBAAiB,GAAGE,kBAAkB,CAACD,UAAD,CAAtC;IACD;;IACD,IAAI,CAACD,iBAAL,EAAwB;MACtB,OAAOG,OAAO,CAACC,MAAR,CAAe,KAAf,CAAP;IACD,CARyC,CAU1C;;;IACA,KAAK,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAX,IAA6BL,UAAU,CAACK,KAAX,CAAiBC,OAAjB,EAA7B,EAAyD;MACvDC,uBAAuB,CAACF,KAAD,EAAQD,KAAR,CAAvB,CADuD,CAEvD;MACA;MACA;;MACAI,kBAAA,CAAMC,cAAN,CACEJ,KAAK,CAACK,QADR,EAEE,CAACL,KAAK,CAACK,QAAN,CAAeC,YAAhB,CAFF,EAGE,CAACC,CAAD,EAA6BC,IAA7B,KAAgD;QAC9C,MAAMC,QAAQ,GAAG,IAAAC,uBAAA,EAAgBF,IAAI,CAACG,IAAL,CAAU,GAAV,CAAhB,CAAjB;QACAC,gBAAgB,CAACH,QAAD,EAAWV,KAAX,EAAkBS,IAAlB,EAAwBD,CAAxB,CAAhB;MACD,CANH,EALuD,CAcvD;;;MACA,IAAI,OAAOP,KAAK,CAACa,OAAb,KAAyB,QAAzB,IAAqC,CAAC,eAAeC,IAAf,CAAoBd,KAAK,CAACa,OAA1B,CAA1C,EAA8E;QAC5E3D,OAAO,CAAC6D,GAAR,CACE,gGADF,EAEElC,sBAAA,CAAUmC,iBAFZ;MAID;IACF;;IACD,OAAO,IAAAC,wBAAA,EAA6B5C,UAA7B,EAAyCsB,UAAzC,CAAP;EAED;;EACD,OAAO,KAAP;AACD;;AAED,SAASC,kBAAT,CAA6BD,UAA7B,EAAqD;EACnD,IAAIA,UAAU,KAAKzB,SAAnB,EAA8B;IAC5B,OAAO,KAAP;EACD,CAHkD,CAKnD;;;EACA,IAAI,CAAC,IAAAgD,sBAAA,EAAeC,mBAAf,EAA2BxB,UAA3B,CAAL,EAA6C;IAC3C,OAAO,KAAP;EACD,CARkD,CAUnD;;;EACA,IAAI,CAACA,UAAU,CAACK,KAAZ,IAAqB,EAAEL,UAAU,CAACK,KAAX,YAA4BoB,KAA9B,CAArB,IAA6DzB,UAAU,CAACK,KAAX,CAAiBrB,MAAjB,KAA4B,CAA7F,EAAgG;IAC9F;IACAzB,OAAO,CAAC6D,GAAR,CAAY,0CAAZ,EAAwDlC,sBAAA,CAAUwC,qBAAlE;IACA,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACD;;AAED,SAASnB,uBAAT,CAAkCF,KAAlC,EAA8CsB,CAA9C,EAAyD;EACvD,MAAMjB,QAAQ,GAAGL,KAAK,CAACK,QAAvB;;EACA,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;IACpBnD,OAAO,CAAC6D,GAAR,CAAa,iBAAgBO,CAAC,CAACC,QAAF,EAAa,oBAA1C;EACD;;EAED,IAAI,CAAClB,QAAQ,CAACC,YAAd,EAA4B;IAC1BpD,OAAO,CAAC6D,GAAR,CAAa,iBAAgBO,CAAC,CAACC,QAAF,EAAa,iCAA1C;EACD;;EAED,IAAI,CAAEJ,mBAAA,CAAWK,WAAZ,CAAoDnB,QAAQ,CAACC,YAA7D,CAAL,EAAiF;IAC/EpD,OAAO,CAAC6D,GAAR,CACG,iBAAgBO,CAAC,CAACC,QAAF,EAAa,4BAA2BE,MAAM,CAAEpB,QAAQ,CAACC,YAAX,CAA0B,WAD3F;EAGD,CAdsD,CAgBvD;;;EACA,IAAID,QAAQ,CAACqB,EAAb,EAAiB;IACfxE,OAAO,CAAC6D,GAAR,CACG,gBAAeO,CAAC,CAACC,QAAF,EAAa,cAAaE,MAAM,CAACpB,QAAQ,CAACC,YAAV,CAAwB;AAC9E,uCAFI,EAGEzB,sBAAA,CAAUmC,iBAHZ;EAKD;;EAED,IAAIX,QAAQ,CAACsB,IAAb,EAAmB;IACjB;IACA,IAAI,CAACtB,QAAQ,CAACsB,IAAT,CAAcC,QAAf,IAA2BC,MAAM,CAACC,IAAP,CAAYzB,QAAQ,CAACsB,IAArB,EAA2BhD,MAA3B,GAAoC,CAAnE,EAAsE;MACpEzB,OAAO,CAAC6D,GAAR,CACG,gBAAeO,CAAC,CAACC,QAAF,EAAa,cAAaE,MAAM,CAACpB,QAAQ,CAACC,YAAV,CAAwB;AAChF,wFAFM,EAGEzB,sBAAA,CAAUmC,iBAHZ;IAKD;EACF;;EAED,IAAIX,QAAQ,CAAC0B,IAAb,EAAmB;IACjB7E,OAAO,CAAC6D,GAAR,CACG,gBAAeO,CAAC,CAACC,QAAF,EAAa,cAAaE,MAAM,CAACpB,QAAQ,CAACC,YAAV,CAAwB;AAC9E,2CAFI,EAGEzB,sBAAA,CAAUmC,iBAHZ;EAKD;AACF;;AAED,SAASJ,gBAAT,CAA2BH,QAA3B,EAA6Ca,CAA7C,EAAwDd,IAAxD,EAAwED,CAAxE,EAAoG;EAClG,IAAIE,QAAQ,KAAK,iBAAb,IAAkCF,CAAC,CAACwB,IAAxC,EAA8C;IAC5C7E,OAAO,CAAC6D,GAAR,CACE,sBACEO,CAAC,CAACC,QAAF,EADF,GAEE,GAFF,GAGE,YAHF,GAIEf,IAAI,CAACG,IAAL,CAAU,GAAV,CAJF,GAKE,sDANJ,EAOE9B,sBAAA,CAAUmC,iBAPZ;EASD;;EAED,IAAIP,QAAQ,KAAK,QAAb,IAAyBF,CAAC,CAACyB,OAA/B,EAAwC;IACtC9E,OAAO,CAAC6D,GAAR,CACE,sBACEO,CAAC,CAACC,QAAF,EADF,GAEE,GAFF,GAGE,YAHF,GAIEf,IAAI,CAACG,IAAL,CAAU,GAAV,CAJF,GAKE,gDANJ,EAOE9B,sBAAA,CAAUmC,iBAPZ;EASD;;EAED,IAAIP,QAAQ,KAAK,WAAb,IAA4BF,CAAC,CAAC0B,SAA9B,IAA2C,CAAC,YAAYnB,IAAZ,CAAiBP,CAAC,CAAC0B,SAAnB,CAAhD,EAAyF;IACvF/E,OAAO,CAAC6D,GAAR,CACE,sBACEO,CAAC,CAACC,QAAF,EADF,GAEE,GAFF,GAGE,YAHF,GAIEf,IAAI,CAACG,IAAL,CAAU,GAAV,CAJF,GAKE,oGANJ,EAOE9B,sBAAA,CAAUqD,YAPZ;EASD;;EAED,KACE;EACC3B,CAAC,YAAYa,KAAb,IAAsBb,CAAC,CAAC5B,MAAF,KAAa,CAApC,IACC,OAAO4B,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,EADhC,IAECA,CAAC,YAAYsB,MAAb,IAAuBA,MAAM,CAACC,IAAP,CAAYvB,CAAZ,EAAe5B,MAAf,KAA0B,CAJpD,EAKE;IACAzB,OAAO,CAAC6D,GAAR,CACE,sBACEO,CAAC,CAACC,QAAF,EADF,GAEE,GAFF,GAGE,YAHF,GAIEf,IAAI,CAACG,IAAL,CAAU,GAAV,CAJF,GAKE,wCANJ,EAOE9B,sBAAA,CAAUmC,iBAPZ;EASD;AACF"}