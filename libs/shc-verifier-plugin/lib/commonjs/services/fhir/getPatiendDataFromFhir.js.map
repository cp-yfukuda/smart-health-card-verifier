{"version":3,"names":["_utils","require","_FHIRFieldConstant","_interopRequireDefault","obj","__esModule","default","RESOURCE_TYPES","constants","acceptedSuffix","resolveName","name","res","family","familyName","givenNames","given","_name$given","join","suffixes","suffix","filter","i","includes","String","length","text","use","getPatientDataFromFhir","credential","_credential$vc","_credential$vc$creden","_credential$vc$creden2","entries","vc","credentialSubject","fhirBundle","entry","patientEntry","find","_entry$resource","resource","resourceType","PATIENT","fullName","dateOfBirth","names","birthDate","nameList","map","it","formatDateOfBirth","exports"],"sources":["getPatiendDataFromFhir.ts"],"sourcesContent":["import { formatDateOfBirth } from '../../utils/utils'\nimport constants from '../../models/FHIRFieldConstant'\nconst { RESOURCE_TYPES } = constants\nconst acceptedSuffix = ['Jr.',  'Sr.', 'II', 'III', 'IV']\nconst resolveName = ( name: any ): string | null  => {\n  let res: string|null = null\n  if ( name.family ) {\n    const familyName: string = name.family\n    let givenNames: string = ''\n    if ( name.given ) {\n      givenNames = name.given?.join(' ')\n      const suffixes = ( name.suffix ?? [] ).filter( (i: any) => acceptedSuffix.includes( String(i)) )\n      if ( suffixes.length > 0 ) {\n        givenNames = `${String(givenNames)} ${String(suffixes.join(' '))}`\n      }\n      // for( let i  in ( name.suffix ?? [] ) ) {\n      //   let s = String( item )\n      //   console.log(\"testing --------------------\" + s );\n      //   if ( acceptedSuffix.indexOf( s ) >= 0 ) {\n      //     givenNames = `${givenNames} ${s}`\n      //   }\n      // }\n      res = `${familyName} / ${givenNames}`\n    }\n  } else if ( name.text ) {\n    res = `${String( name.text)}`\n  }\n  if ( res != null && name.use ){\n    res = `${String(res)} (${String(name.use)})`\n  }\n  return res\n}\n\nexport const getPatientDataFromFhir = (credential: any): any => {\n  const entries = credential?.vc?.credentialSubject?.fhirBundle?.entry\n\n  const patientEntry = entries?.find(\n    (entry: any) => entry?.resource?.resourceType === RESOURCE_TYPES.PATIENT,\n  ).resource\n\n  let fullName: string = ''\n  let dateOfBirth: string = ''\n  let names = []\n\n  if ( patientEntry ) {\n    const { name, birthDate } = patientEntry\n    const nameList = name\n    if ( name ) {\n      names = nameList.map( (it: any)=> {\n        fullName = resolveName( it ) ?? ''\n        return fullName\n      })\n    }\n\n    dateOfBirth = formatDateOfBirth(birthDate)\n  }\n  return { \n    names,\n    dateOfBirth,\n    resourceType:RESOURCE_TYPES.PATIENT\n  }\n}\n"],"mappings":"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"}