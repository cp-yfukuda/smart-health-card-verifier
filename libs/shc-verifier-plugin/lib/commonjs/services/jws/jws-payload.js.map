{"version":3,"names":["_parserSdk","require","_smartHealthCardVcSchema","_interopRequireDefault","fhirBundle","_interopRequireWildcard","_fhirTypes","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","schema","jwsPayloadSchema","exports","validate","jwsPayloadText","trim","console","log","ErrorCode","TRAILING_CHARACTERS","jwsPayload","Utils","parseJson","isJwsPayloadValid","checkJwsPayload","Promise","reject","fhirBundleJson","vc","credentialSubject","recordType","getRecordTypeFromPayload","JSON_PARSE_ERROR","nbf","Date","setTime","now","getTime","dateParsedInMilliseconds","toUTCString","NOT_YET_VALID","type","includes","SCHEMA_ERROR","InvalidError","CRITICAL_DATA_MISSING"],"sources":["jws-payload.ts"],"sourcesContent":["import { ErrorCode, Utils, InvalidError } from 'parser-sdk'\nimport jwsPayloadSchema from '../../schemas/smart-health-card-vc-schema.json'\nimport * as fhirBundle from '../fhir/fhirBundle'\nimport { getRecordTypeFromPayload, RecordType } from '../fhir/fhirTypes'\nimport type { JWSPayload } from '../fhir/types' \nexport const schema = jwsPayloadSchema\n\n\nexport async function validate (jwsPayloadText: string): Promise< boolean > {\n  if (jwsPayloadText.trim() !== jwsPayloadText) {\n    console.log('JWS payload has leading or trailing spaces', ErrorCode.TRAILING_CHARACTERS)\n    jwsPayloadText = jwsPayloadText.trim()\n  }\n\n  const jwsPayload = Utils.parseJson<JWSPayload>(jwsPayloadText)\n  const isJwsPayloadValid = checkJwsPayload(jwsPayload)\n  if (!isJwsPayloadValid) { \n    return Promise.reject(false)\n  }\n \n  const fhirBundleJson = jwsPayload?.vc.credentialSubject.fhirBundle\n    \n  const recordType: RecordType = getRecordTypeFromPayload(jwsPayload as JWSPayload)\n\n  return fhirBundle.validate(recordType, fhirBundleJson)\n\n}\n\nfunction checkJwsPayload (jwsPayload: JWSPayload | undefined) {\n  if (!jwsPayload || typeof jwsPayload !== 'object') {\n    console.log('Failed to parse JWS.payload data as JSON.', ErrorCode.JSON_PARSE_ERROR)\n    return false\n  }\n  // validate issuance date\n  const nbf = new Date()\n  nbf.setTime(jwsPayload.nbf * 1000) // convert seconds to milliseconds\n  const now = new Date()\n\n  if (nbf > now) {\n    if (jwsPayload.nbf > new Date(2021, 1, 1).getTime()) {\n      // we will assume the nbf was encoded in milliseconds, and we will return an error\n      const dateParsedInMilliseconds = new Date()\n      dateParsedInMilliseconds.setTime(jwsPayload.nbf)\n      console.log(\n        `Health card is not yet valid, nbf=${jwsPayload.nbf} (${nbf.toUTCString()}).\\n` +\n          'nbf should be encoded in seconds since 1970-01-01T00:00:00Z UTC.\\n' +\n          `Did you encode the date in milliseconds, which would give the date: ${dateParsedInMilliseconds.toUTCString()}?`,\n        ErrorCode.NOT_YET_VALID,\n      )\n    } else {\n      console.log(\n        `Health card is not yet valid, nbf=${jwsPayload.nbf} (${nbf.toUTCString()}).`,\n        ErrorCode.NOT_YET_VALID,\n      )\n    }\n  }\n\n  if (\n    !jwsPayload.vc.type ||\n    !jwsPayload.vc.type.includes('https://smarthealth.cards#health-card')\n  ) {\n    console.log(\n      \"JWS.payload.vc.type should contain 'https://smarthealth.cards#health-card'\",\n      ErrorCode.SCHEMA_ERROR,\n    )\n    throw new InvalidError(  ErrorCode.SCHEMA_ERROR )\n  }\n\n  // to continue validation, we must have a FHIR bundle string to validate\n  if (\n    !jwsPayload.vc ||\n    !jwsPayload.vc.credentialSubject ||\n    !jwsPayload.vc.credentialSubject.fhirBundle\n  ) {\n    // The schema check above will list the expected properties/type\n    console.log(\n      'JWS.payload.vc.credentialSubject.fhirBundle{} required to continue.',\n      ErrorCode.CRITICAL_DATA_MISSING,\n    )\n    return false\n  }\n  return true\n}\n"],"mappings":"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"}