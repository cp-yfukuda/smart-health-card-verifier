{"version":3,"names":["JwsValidationOptions","skipJwksDownload","jwksDownloadTimeOut","MAX_JWS_SINGLE_CHUNK_LENGTH","validate","jws","KeysStore","resetStore","trim","console","log","ErrorCode","TRAILING_CHARACTERS","length","JWS_TOO_LONG","jwsRegex","isJws","test","JSON_PARSE_ERROR","validateSchema","jwsCompactSchema","header","rawPayload","key","split","headerJson","checkJwsHeader","checkJwsSignatureFormat","inflatedPayload","b64DecodedPayloadString","checkJwsPayload","join","isJwsPayloadValid","jwsPayload","err","payload","Utils","parseJson","extractKeyURL","InvalidError","result","isValid","verifyJws","kid","document","getRecord","fetchWithTimeout","url","options","timeout","timeoutError","Promise","race","fetch","_","reject","setTimeout","Error","downloadAndImportValidKeys","issuerURL","timer","Timer","jwkURL","requestedOrigin","start","responseRaw","headers","Origin","catch","ISSUER_KEY_DOWNLOAD_ERROR","keySet","json","loadingTime","stop","toFixed","verifyAndImportHealthCardIssuerKey","String","message","headerBytes","errString","Buffer","from","JWS_VERIFICATION_ERROR","toString","JWS_HEADER_ERROR","headerKeys","Object","keys","includes","alg","zip","sigBytes","SIGNATURE_FORMAT_ERROR","rStart","rBytes","slice","sStart","sBytes","newSig","concat","replace","b64DecodedPayloadBuffer","pako","inflateRaw","to","inflate","INFLATION_ERROR","iss","INVALID_ISSUER_URL","useLegacy","getVerifierInitOption","getIssuerFunc","getIssuer","VerifierKey","store","get","error","verifier","jose","JWS","createVerify","verify"],"sources":["jws-compact.ts"],"sourcesContent":["/* eslint no-catch-shadow: off, no-shadow: off */\nimport pako from 'pako'\nimport jose from 'node-jose'\n\nimport { InvalidError, Utils, Timer } from 'verifier-sdk'\nimport type { JWSPayload } from '../fhir/types'\nimport { ErrorCode } from 'verifier-sdk'\nimport { getVerifierInitOption, VerifierKey } from '../../models/Config'\nimport { KeysStore } from './keys'\nimport * as jwsPayload from './jws-payload'\nimport { validateSchema } from './schema'\nimport jwsCompactSchema from '../../schemas/jws-schema.json'\nimport { verifyAndImportHealthCardIssuerKey } from './shcKeyValidator'\nimport { getRecord } from '../fhir/fhirBundle'\nexport const JwsValidationOptions = {\n  skipJwksDownload: false,\n  jwksDownloadTimeOut: 5000,\n}\n\nconst MAX_JWS_SINGLE_CHUNK_LENGTH = 1195\n\nexport async function validate ( jws: string ): Promise<any> {\n  KeysStore.resetStore()\n  if (jws.trim() !== jws) {\n    console.log('JWS has leading or trailing spaces', ErrorCode.TRAILING_CHARACTERS)\n    jws = jws.trim()\n  }\n  if (jws.length > MAX_JWS_SINGLE_CHUNK_LENGTH) {\n    console.log(\n      `JWS is longer than ${MAX_JWS_SINGLE_CHUNK_LENGTH} characters, and will result in split QR codes`,\n      ErrorCode.JWS_TOO_LONG,\n    )\n  }\n\n  const jwsRegex = /[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+/g\n  const isJws = jwsRegex.test(jws)\n  if (!isJws) {\n    console.log(\n      \"Failed to parse JWS-compact data as 'base64url.base64url.base64url' string.\",\n      ErrorCode.JSON_PARSE_ERROR,\n    )\n    return false\n  }\n\n  // failures will be recorded in the console.logan continue processing.\n  validateSchema(jwsCompactSchema, jws)\n\n  // split jws into header, payload, key\n  let [header, rawPayload, key] = jws.split('.')\n  const headerJson = checkJwsHeader(header)\n  key = checkJwsSignatureFormat(key)\n  const { inflatedPayload, b64DecodedPayloadString } = checkJwsPayload(rawPayload)\n\n  jws = [header, rawPayload, key].join('.')\n\n  try {\n    const isJwsPayloadValid = await jwsPayload.validate(\n      inflatedPayload || b64DecodedPayloadString || rawPayload,\n    )\n    if (!isJwsPayloadValid) {\n      console.log('ERROR at jwsPayload.validate!')\n    }\n  }catch (err) {\n    console.log('ERROR at jwsPayload.validate!')\n    //#TODO throw error? \n  }\n  // try to parse JSON even if it failed validation above\n  // if we did not get a payload back, it failed to be parsed and we cannot extract the key url\n  // so we can stop. The jws-payload child will contain the parse errors.\n  // The payload validation may have a Fatal error\n  const payload = Utils.parseJson<JWSPayload>(inflatedPayload || b64DecodedPayloadString || rawPayload)\n  if (!payload) {\n    console.log('NO PAYLOAD!!')\n    return\n  }\n\n  try { \n    await extractKeyURL(payload)\n  } catch (err) {\n    if (err instanceof InvalidError) throw err\n    return \n  }\n  const result = false\n  if (!headerJson) {\n    return result\n  }\n\n  const isValid = await verifyJws(jws, headerJson.kid)\n  let document = await getRecord( payload ) as any\n\n  document['isValid'] = isValid\n\n  return document\n}\n\nasync function fetchWithTimeout (url: string, options: any, timeout: number, timeoutError: string) {\n  return await Promise.race([\n    fetch(url, options),\n\n    new Promise((_:any, reject) => setTimeout(() => reject(new Error(timeoutError)), timeout)),\n  ])\n}\n\nasync function downloadAndImportValidKeys (issuerURL: string ): Promise<boolean> {\n  const timer = new Timer()\n  const jwkURL = issuerURL + '/.well-known/jwks.json'\n  const requestedOrigin = 'https://example.org' // request bogus origin to test CORS response\n\n  const timeoutError = 'Failed to download issuer JWK set'\n  const timeout = JwsValidationOptions.jwksDownloadTimeOut\n  try {\n    timer.start()\n    const responseRaw: any = await fetchWithTimeout(\n      jwkURL,\n      { headers: { Origin: requestedOrigin } },\n      timeout,\n      timeoutError,\n    ).catch( ( _:any )=> {\n      throw new InvalidError( ErrorCode.ISSUER_KEY_DOWNLOAD_ERROR )\n    })\n    const keySet = await responseRaw.json()\n    let loadingTime = timer.stop()\n    console.log(`loading issure key: ${loadingTime.toFixed(2)}sec`)\n    if (!keySet) {\n      throw new Error('Failed to parse JSON KeySet schema')\n    }\n\n    try {\n      timer.start()\n      await verifyAndImportHealthCardIssuerKey(keySet)\n      loadingTime = timer.stop()\n      console.log(`verification took:  ${loadingTime.toFixed(2)}sec`)\n\n      return true\n    } catch ( err : any ) {\n      console.log(\n        `Can't parse downloaded issuer JWK set: ${String(err.message)}`,\n        ErrorCode.ISSUER_KEY_DOWNLOAD_ERROR,\n      )\n      return false\n    }\n  } catch (err: any) {\n    if ( err instanceof InvalidError ) throw err\n    console.log(\n      `Failed to download issuer JWK set:  ${String(err.message)}`,\n      ErrorCode.ISSUER_KEY_DOWNLOAD_ERROR,\n    )\n    // return undefined\n\n    throw new Error(timeoutError)\n  }\n}\n\nfunction checkJwsHeader (header: string) {\n  let headerBytes\n  let errString\n\n  try {\n    headerBytes = Buffer.from(header, 'base64')\n  } catch (err) {\n    errString = err as string\n  } finally {\n    if (!headerBytes) {\n      console.log(\n        ['Error base64-decoding the JWS header.', errString].join('\\n'),\n        ErrorCode.JWS_VERIFICATION_ERROR,\n      )\n    }\n  }\n\n  let headerJson\n\n  if (headerBytes) {\n    headerJson = Utils.parseJson<{ kid: string, alg: string, zip: string }>(headerBytes.toString())\n    if (headerJson == null) {\n      console.log(\n        [\"Can't parse JWS header as JSON.\", errString].join('\\n'),\n        ErrorCode.JWS_HEADER_ERROR,\n      )\n    } else {\n      const headerKeys = Object.keys(headerJson)\n\n      if (!headerKeys.includes('alg')) {\n        console.log(\"JWS header missing 'alg' property.\", ErrorCode.JWS_HEADER_ERROR)\n      } else if (headerJson.alg !== 'ES256') {\n        console.log(\n          `Wrong value for JWS header property 'alg' property expected: \"ES256\", actual: \"${headerJson.alg}\".`,\n          ErrorCode.JWS_HEADER_ERROR,\n        )\n      }\n      if (!headerKeys.includes('zip')) {\n        console.log(\"JWS header missing 'zip' property.\", ErrorCode.JWS_HEADER_ERROR)\n      } else if (headerJson.zip !== 'DEF') {\n        console.log(\n          `Wrong value for JWS header property 'zip' property expected: \"DEF\", actual: \"${headerJson.zip}\".`,\n          ErrorCode.JWS_HEADER_ERROR,\n        )\n      }\n      if (!headerKeys.includes('kid')) {\n        console.log(\"JWS header missing 'kid' property.\", ErrorCode.JWS_HEADER_ERROR)\n      }\n\n      // the value of the kid will be used in the crypto validation of the signature to select the issuer's public key\n    }\n  }\n\n  return headerJson\n}\n\nfunction checkJwsSignatureFormat (key: string) {\n  let sigBytes\n  try {\n    sigBytes = Buffer.from(key, 'base64')\n  } catch (err) {\n    console.log(\n      ['Error base64-decoding the JWS signature.', err as string].join('\\n'),\n      ErrorCode.JWS_VERIFICATION_ERROR,\n    )\n  }\n\n  if (sigBytes && sigBytes.length > 64 && sigBytes[0] === 0x30 && sigBytes[2] === 0x02) {\n    console.log(\n      'Signature appears to be in DER encoded form. Signature is expected to be 64-byte r||s concatenated form.\\n' +\n        'See https://tools.ietf.org/html/rfc7515#appendix-A.3 for expected ES256 signature form.',\n      ErrorCode.SIGNATURE_FORMAT_ERROR,\n    )\n\n    // DER encoded signature will constructed as follows:\n    // 0       |1             |2      |3         |4-35             |36       |37        |38-69\n    // 0x30      |0x44          |0x02     |0x20        |<r-component of signature> |0x02     |0x20 or 0x21    |<s-component of signature>\n    // Sequence-type |length-of-sequence-data |Integer-type |length-of-integer |integer-data         |Integer-type |length-of-integer |integer-data\n\n    // sigBytes[3] contains length of r-integer it may be 32 or 33 bytes.\n    // DER encoding dictates an Integer is negative if the high-order bit of the first byte is set.\n    //   To represent an integer with a high-order bit as positive, a leading zero byte is required.\n    //   This increases the Integer length to 33.\n\n    // For signature use, the sign is irrelevant and the leading zero, if present, is ignored.\n    const rStart = 4 + (sigBytes[3] - 32) // adjust for the potential leading zero\n    const rBytes = sigBytes.slice(rStart, rStart + 32) // 32 bytes of the r-integer\n    const sStart = sigBytes.length - 32\n    const sBytes = sigBytes.slice(sStart) // 32 bytes of the s-integer\n\n    // Make Base64url\n    const newSig = Buffer.concat([rBytes, sBytes])\n      .toString('base64')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/[=]/g, '')\n    key = newSig\n\n    console.log('jws-signature converted from DER form to r||s form: ' + newSig)\n  } else if (sigBytes && sigBytes.length !== 64) {\n    console.log(\n      'Signature is ' + sigBytes.length.toString() + '-bytes. Signature is expected to be 64-bytes',\n      ErrorCode.SIGNATURE_FORMAT_ERROR,\n    )\n  }\n  return key\n}\n\nfunction checkJwsPayload (rawPayload: string) {\n  // check payload\n  let b64DecodedPayloadBuffer\n  let b64DecodedPayloadString\n\n  try {\n    b64DecodedPayloadBuffer = Buffer.from(rawPayload, 'base64')\n  } catch (err) {\n    console.log(\n      ['Error base64-decoding the JWS payload.', err as string].join('\\n'),\n      ErrorCode.JWS_VERIFICATION_ERROR,\n    )\n  }\n\n  let inflatedPayload\n\n  if (b64DecodedPayloadBuffer) {\n    try {\n      inflatedPayload = pako.inflateRaw(b64DecodedPayloadBuffer, { to: 'string' }).trim()\n    } catch (err) {\n      // try normal inflate\n      try {\n        inflatedPayload = pako.inflate(b64DecodedPayloadBuffer, { to: 'string' }).trim()\n        console.log(\n          'Error inflating JWS payload. Compression should use raw DEFLATE (without wrapper header and adler32 crc)',\n          ErrorCode.INFLATION_ERROR,\n        )\n      } catch (err) {\n        console.log(\n          ['Error inflating JWS payload. Did you use raw DEFLATE compression?', err as string].join(\n            '\\n',\n          ),\n          ErrorCode.INFLATION_ERROR,\n        )\n        // inflating failed, let's try to parse the base64-decoded string directly\n        b64DecodedPayloadString = b64DecodedPayloadBuffer.toString('utf-8').trim()\n      }\n    }\n  }\n  return { inflatedPayload, b64DecodedPayloadString }\n}\n\nasync function extractKeyURL (payload: any) {\n  if (payload.iss) {\n    if (typeof payload.iss === 'string') {\n      if (payload.iss.slice(0, 8) !== 'https://') {\n        console.log('Issuer URL SHALL use https', ErrorCode.INVALID_ISSUER_URL)\n      }\n\n      if (payload.iss.slice(-1) === '/') {\n        console.log('Issuer URL SHALL NOT include a trailing /', ErrorCode.INVALID_ISSUER_URL)\n      }\n      // from issuer data in the vci directory, look for issuer data.\n      var iss= payload.iss\n      var useLegacy = getVerifierInitOption().useLegacy\n      if( ! useLegacy  ) {\n         //switch to canonical_iss if there is \n         var getIssuerFunc = getVerifierInitOption().getIssuer\n         iss = await getIssuerFunc( VerifierKey, payload.iss ) ?? payload.iss\n      }\n      // download the keys into the keystore. if it fails, continue an try to use whatever is in the keystore.\n      if (!JwsValidationOptions.skipJwksDownload) {\n\n        await downloadAndImportValidKeys( iss )\n      } else {\n        console.log('skipping issuer JWK set download')\n      }\n    } else {\n      console.log(`JWS payload 'iss' should be a string, not a ${typeof payload.iss}`)\n    }\n  } else {\n    throw new Error(\"Can't find 'iss' entry in JWS payload\")\n  }\n}\n\nasync function verifyJws (jws: string, kid: string): Promise<boolean> {\n  var key: any | null = null;\n  if (kid && ! ( key = KeysStore.store.get(kid))) {\n    console.log(\n      `JWS verification failed: can't find key with 'kid' = ${kid} in issuer set`,\n      ErrorCode.JWS_VERIFICATION_ERROR,\n    )\n  }\n  if( key && key.error && key.error instanceof InvalidError ) {\n    throw key.error\n  }\n  const verifier: jose.JWS.Verifier = jose.JWS.createVerify(KeysStore.store)\n\n  try {\n    const result = await verifier.verify(jws)\n    return !!result\n\n  } catch (error) {\n    // The error message is always 'no key found', regardless if a key is missing or\n    // if the signature was tempered with. Don't return the node-jose error message.\n    console.log('JWS verification failed', ErrorCode.JWS_VERIFICATION_ERROR)\n    return false\n  }\n}\n"],"mappings":"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"}